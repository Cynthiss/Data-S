import requests
from bs4 import BeautifulSoup

# URL de la propiedad
url = "https://mapainmueble.com/properties/apartamento-en-alquiler-santa-ines-zona-14-amueblado-de-3-dormitorios-daa41616/"

# Simular un navegador para evitar bloqueos
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
}

# Hacer la solicitud HTTP
response = requests.get(url, headers=headers)

# Verificar si la página respondió correctamente
if response.status_code == 200:
    print("[✅] Conexión exitosa: Código 200")

    # Crear objeto BeautifulSoup con el HTML de la página
    soup = BeautifulSoup(response.text, "html.parser")

    # 🏡 EXTRAER DATOS DE LA PROPIEDAD
    detalles_contenedor = soup.find("div", id="collapseOne")
    datos_extraidos = {}

    if detalles_contenedor:
        detalles = detalles_contenedor.find_all("div", class_="listing_detail col-md-4")
        for detalle in detalles:
            label = detalle.find("strong")  # Buscar etiqueta con título (ej: "Precio:")
            if label:
                value = label.next_sibling  # Obtener el valor exacto

                if value and isinstance(value, str):  # Verificar que sea texto
                    datos_extraidos[label.text.strip()] = value.strip()
                else:
                    datos_extraidos[label.text.strip()] = "No disponible"

    # 📍 EXTRAER UBICACIÓN
    ubicacion_contenedor = soup.find("div", class_="panel-body")
    ubicacion_datos = {}

    if ubicacion_contenedor:
        ubicaciones = ubicacion_contenedor.find_all("div", class_="listing_detail col-md-4")
        for ubicacion in ubicaciones:
            label = ubicacion.find("strong")
            if label:
                value = (
                    ubicacion.find("a").text.strip()
                    if ubicacion.find("a")
                    else label.next_sibling if label.next_sibling else "No disponible"
                )

                if value and isinstance(value, str):  # Verificar que sea texto
                    ubicacion_datos[label.text.strip()] = value.strip()
                else:
                    ubicacion_datos[label.text.strip()] = "No disponible"

    # 📌 EXTRAER LINK DE GOOGLE MAPS
    google_maps_link = soup.find("a", class_="acc_google_maps")["href"] if soup.find("a", class_="acc_google_maps") else "No disponible"

    # 🏠 EXTRAER TIPO DE PROPIEDAD Y ESTADO DESDE EL HTML
    tipo_propiedad = "No disponible"
    estado_propiedad = "No disponible"

    tipo_estado_container = soup.find("div", class_="cat_n_type")

    if tipo_estado_container:
        labels = tipo_estado_container.find_all("div", class_="property_title_label")
        
        if len(labels) >= 2:
            estado_propiedad = labels[0].text.strip()  # Alquiler o Venta
            tipo_propiedad = labels[1].text.strip()  # Apartamento o Casa
        elif len(labels) == 1:
            estado_propiedad = labels[0].text.strip()  # En caso de que solo haya uno

    # 📌 MOSTRAR TODOS LOS DATOS EXTRAÍDOS
    print("\n🔹 **Datos de la Propiedad:**")
    print(f"- Estado: {estado_propiedad}")
    print(f"- Tipo de Propiedad: {tipo_propiedad}")
    for key, value in datos_extraidos.items():
        print(f"- {key} {value}")

    print("\n📍 **Ubicación:**")
    for key, value in ubicacion_datos.items():
        print(f"- {key} {value}")

    print(f"\n🌍 **Google Maps:** {google_maps_link}")

else:
    print(f"[❌] Error al acceder a la página. Código: {response.status_code}")
